version: '3.7'
services:
  jumiascraperdb:
    image: postgres:15
    container_name: jumiascraperdb
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${DB_PORT}:${DB_PORT}
    env_file:
      - .env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./logs/pglogs:/var/log/postgresql
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks:
      - phonesjumia
    command:
      - "postgres"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "log_destination=stderr"

  sql-executor:
    image: postgres:15
    volumes:
      - ./sql_scripts:/scripts
    env_file:
      - .env
    networks:
      - phonesjumia
    links:
      - jumiascraperdb
    depends_on:
      - jumiascraperdb
    command: sh -c 'sleep 10 && PGPASSWORD=${POSTGRES_PASSWORD} psql -h ${POSTGRES_HOST} -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f /scripts/create_tables.sql'

  jumiascraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jumiascraper
    env_file:
      - .env
    networks:
      - phonesjumia
    volumes:
      - ./jumiascraper:/app/jumiascraper
      - jumiascraper_extracted:/app/dataset/extracted
    command: >
      bash -c "python3 run.py && python3 processing/transforming.py && touch /completed"
    depends_on:
      sql-executor:
        condition: service_completed_successfully

  dbt:
    build:
      context: ./dbt_jumiascraper
      dockerfile: Dockerfile.dbt
      target: dbt-postgres
    container_name: dbt-jumiascraper
    volumes:
      - ./dbt_jumiascraper:/app/dbt_jumiascraper
      - jumiascraper_extracted:/app/dataset/extracted
      - jumiascraper_normalized:/app/dataset/normalized
      - ./processing:/app/processing
    ports:
      - ${PORT}:${PORT}
    env_file:
      - .env
    networks:
      - phonesjumia
    command: "build"
    depends_on:
      jumiascraper:
        condition: service_completed_successfully
    # pgadmin:
    #   container_name: pgadmin
    #   image: dpage/pgadmin4
    #   env_file:
    #     - .env
    #   networks:
    #     - phonesjumia
    #   ports:
    #     - ${HOSTPORT}:${LOCALPORT}

networks:
  phonesjumia:
    name: phonesjumia
    driver: bridge

volumes:
  jumiascraper_extracted:
  jumiascraper_normalized:
  pgdata:
  pglogs:
